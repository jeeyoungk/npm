name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    name: Code Quality & Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        id: install
        run: pnpm install --frozen-lockfile

      - name: Check code formatting
        if: always() && steps.install.conclusion == 'success'
        run: pnpm format:check

      - name: Run linting
        if: always() && steps.install.conclusion == 'success'
        run: pnpm lint

      - name: Build packages
        if: always() && steps.install.conclusion == 'success'
        run: pnpm build

      - name: Run tests
        if: always() && steps.install.conclusion == 'success'
        run: pnpm test:run

  release:
    # commented out for now to test the release workflow.
    # needs: quality-checks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write
      pages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
